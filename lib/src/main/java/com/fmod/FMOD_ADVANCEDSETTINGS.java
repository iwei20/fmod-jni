package com.fmod;
/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.3.0
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


public class FMOD_ADVANCEDSETTINGS {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected FMOD_ADVANCEDSETTINGS(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(FMOD_ADVANCEDSETTINGS obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected static long swigRelease(FMOD_ADVANCEDSETTINGS obj) {
    long ptr = 0;
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new RuntimeException("Cannot release ownership as memory is not owned");
      ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.delete();
    }
    return ptr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        FMODStudioJNI.delete_FMOD_ADVANCEDSETTINGS(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setCbSize(int value) {
    FMODStudioJNI.FMOD_ADVANCEDSETTINGS_cbSize_set(swigCPtr, this, value);
  }

  public int getCbSize() {
    return FMODStudioJNI.FMOD_ADVANCEDSETTINGS_cbSize_get(swigCPtr, this);
  }

  public void setMaxMPEGCodecs(int value) {
    FMODStudioJNI.FMOD_ADVANCEDSETTINGS_maxMPEGCodecs_set(swigCPtr, this, value);
  }

  public int getMaxMPEGCodecs() {
    return FMODStudioJNI.FMOD_ADVANCEDSETTINGS_maxMPEGCodecs_get(swigCPtr, this);
  }

  public void setMaxADPCMCodecs(int value) {
    FMODStudioJNI.FMOD_ADVANCEDSETTINGS_maxADPCMCodecs_set(swigCPtr, this, value);
  }

  public int getMaxADPCMCodecs() {
    return FMODStudioJNI.FMOD_ADVANCEDSETTINGS_maxADPCMCodecs_get(swigCPtr, this);
  }

  public void setMaxXMACodecs(int value) {
    FMODStudioJNI.FMOD_ADVANCEDSETTINGS_maxXMACodecs_set(swigCPtr, this, value);
  }

  public int getMaxXMACodecs() {
    return FMODStudioJNI.FMOD_ADVANCEDSETTINGS_maxXMACodecs_get(swigCPtr, this);
  }

  public void setMaxVorbisCodecs(int value) {
    FMODStudioJNI.FMOD_ADVANCEDSETTINGS_maxVorbisCodecs_set(swigCPtr, this, value);
  }

  public int getMaxVorbisCodecs() {
    return FMODStudioJNI.FMOD_ADVANCEDSETTINGS_maxVorbisCodecs_get(swigCPtr, this);
  }

  public void setMaxAT9Codecs(int value) {
    FMODStudioJNI.FMOD_ADVANCEDSETTINGS_maxAT9Codecs_set(swigCPtr, this, value);
  }

  public int getMaxAT9Codecs() {
    return FMODStudioJNI.FMOD_ADVANCEDSETTINGS_maxAT9Codecs_get(swigCPtr, this);
  }

  public void setMaxFADPCMCodecs(int value) {
    FMODStudioJNI.FMOD_ADVANCEDSETTINGS_maxFADPCMCodecs_set(swigCPtr, this, value);
  }

  public int getMaxFADPCMCodecs() {
    return FMODStudioJNI.FMOD_ADVANCEDSETTINGS_maxFADPCMCodecs_get(swigCPtr, this);
  }

  public void setMaxOpusCodecs(int value) {
    FMODStudioJNI.FMOD_ADVANCEDSETTINGS_maxOpusCodecs_set(swigCPtr, this, value);
  }

  public int getMaxOpusCodecs() {
    return FMODStudioJNI.FMOD_ADVANCEDSETTINGS_maxOpusCodecs_get(swigCPtr, this);
  }

  public void setASIONumChannels(int value) {
    FMODStudioJNI.FMOD_ADVANCEDSETTINGS_ASIONumChannels_set(swigCPtr, this, value);
  }

  public int getASIONumChannels() {
    return FMODStudioJNI.FMOD_ADVANCEDSETTINGS_ASIONumChannels_get(swigCPtr, this);
  }

  public void setASIOChannelList(SWIGTYPE_p_p_char value) {
    FMODStudioJNI.FMOD_ADVANCEDSETTINGS_ASIOChannelList_set(swigCPtr, this, SWIGTYPE_p_p_char.getCPtr(value));
  }

  public SWIGTYPE_p_p_char getASIOChannelList() {
    long cPtr = FMODStudioJNI.FMOD_ADVANCEDSETTINGS_ASIOChannelList_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_p_char(cPtr, false);
  }

  public void setASIOSpeakerList(SWIGTYPE_p_FMOD_SPEAKER value) {
    FMODStudioJNI.FMOD_ADVANCEDSETTINGS_ASIOSpeakerList_set(swigCPtr, this, SWIGTYPE_p_FMOD_SPEAKER.getCPtr(value));
  }

  public SWIGTYPE_p_FMOD_SPEAKER getASIOSpeakerList() {
    long cPtr = FMODStudioJNI.FMOD_ADVANCEDSETTINGS_ASIOSpeakerList_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_FMOD_SPEAKER(cPtr, false);
  }

  public void setVol0virtualvol(float value) {
    FMODStudioJNI.FMOD_ADVANCEDSETTINGS_vol0virtualvol_set(swigCPtr, this, value);
  }

  public float getVol0virtualvol() {
    return FMODStudioJNI.FMOD_ADVANCEDSETTINGS_vol0virtualvol_get(swigCPtr, this);
  }

  public void setDefaultDecodeBufferSize(long value) {
    FMODStudioJNI.FMOD_ADVANCEDSETTINGS_defaultDecodeBufferSize_set(swigCPtr, this, value);
  }

  public long getDefaultDecodeBufferSize() {
    return FMODStudioJNI.FMOD_ADVANCEDSETTINGS_defaultDecodeBufferSize_get(swigCPtr, this);
  }

  public void setProfilePort(int value) {
    FMODStudioJNI.FMOD_ADVANCEDSETTINGS_profilePort_set(swigCPtr, this, value);
  }

  public int getProfilePort() {
    return FMODStudioJNI.FMOD_ADVANCEDSETTINGS_profilePort_get(swigCPtr, this);
  }

  public void setGeometryMaxFadeTime(long value) {
    FMODStudioJNI.FMOD_ADVANCEDSETTINGS_geometryMaxFadeTime_set(swigCPtr, this, value);
  }

  public long getGeometryMaxFadeTime() {
    return FMODStudioJNI.FMOD_ADVANCEDSETTINGS_geometryMaxFadeTime_get(swigCPtr, this);
  }

  public void setDistanceFilterCenterFreq(float value) {
    FMODStudioJNI.FMOD_ADVANCEDSETTINGS_distanceFilterCenterFreq_set(swigCPtr, this, value);
  }

  public float getDistanceFilterCenterFreq() {
    return FMODStudioJNI.FMOD_ADVANCEDSETTINGS_distanceFilterCenterFreq_get(swigCPtr, this);
  }

  public void setReverb3Dinstance(int value) {
    FMODStudioJNI.FMOD_ADVANCEDSETTINGS_reverb3Dinstance_set(swigCPtr, this, value);
  }

  public int getReverb3Dinstance() {
    return FMODStudioJNI.FMOD_ADVANCEDSETTINGS_reverb3Dinstance_get(swigCPtr, this);
  }

  public void setDSPBufferPoolSize(int value) {
    FMODStudioJNI.FMOD_ADVANCEDSETTINGS_DSPBufferPoolSize_set(swigCPtr, this, value);
  }

  public int getDSPBufferPoolSize() {
    return FMODStudioJNI.FMOD_ADVANCEDSETTINGS_DSPBufferPoolSize_get(swigCPtr, this);
  }

  public void setResamplerMethod(FMOD_DSP_RESAMPLER value) {
    FMODStudioJNI.FMOD_ADVANCEDSETTINGS_resamplerMethod_set(swigCPtr, this, value.swigValue());
  }

  public FMOD_DSP_RESAMPLER getResamplerMethod() {
    return FMOD_DSP_RESAMPLER.swigToEnum(FMODStudioJNI.FMOD_ADVANCEDSETTINGS_resamplerMethod_get(swigCPtr, this));
  }

  public void setRandomSeed(long value) {
    FMODStudioJNI.FMOD_ADVANCEDSETTINGS_randomSeed_set(swigCPtr, this, value);
  }

  public long getRandomSeed() {
    return FMODStudioJNI.FMOD_ADVANCEDSETTINGS_randomSeed_get(swigCPtr, this);
  }

  public void setMaxConvolutionThreads(int value) {
    FMODStudioJNI.FMOD_ADVANCEDSETTINGS_maxConvolutionThreads_set(swigCPtr, this, value);
  }

  public int getMaxConvolutionThreads() {
    return FMODStudioJNI.FMOD_ADVANCEDSETTINGS_maxConvolutionThreads_get(swigCPtr, this);
  }

  public void setMaxSpatialObjects(int value) {
    FMODStudioJNI.FMOD_ADVANCEDSETTINGS_maxSpatialObjects_set(swigCPtr, this, value);
  }

  public int getMaxSpatialObjects() {
    return FMODStudioJNI.FMOD_ADVANCEDSETTINGS_maxSpatialObjects_get(swigCPtr, this);
  }

  public FMOD_ADVANCEDSETTINGS() {
    this(FMODStudioJNI.new_FMOD_ADVANCEDSETTINGS(), true);
  }

}
