package com.fmod;
/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.3.0
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


public class FMOD_OUTPUT_OBJECT3DINFO {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected FMOD_OUTPUT_OBJECT3DINFO(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(FMOD_OUTPUT_OBJECT3DINFO obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected static long swigRelease(FMOD_OUTPUT_OBJECT3DINFO obj) {
    long ptr = 0;
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new RuntimeException("Cannot release ownership as memory is not owned");
      ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.delete();
    }
    return ptr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        FMODStudioJNI.delete_FMOD_OUTPUT_OBJECT3DINFO(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setBuffer(SWIGTYPE_p_float value) {
    FMODStudioJNI.FMOD_OUTPUT_OBJECT3DINFO_buffer_set(swigCPtr, this, SWIGTYPE_p_float.getCPtr(value));
  }

  public SWIGTYPE_p_float getBuffer() {
    long cPtr = FMODStudioJNI.FMOD_OUTPUT_OBJECT3DINFO_buffer_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_float(cPtr, false);
  }

  public void setBufferlength(long value) {
    FMODStudioJNI.FMOD_OUTPUT_OBJECT3DINFO_bufferlength_set(swigCPtr, this, value);
  }

  public long getBufferlength() {
    return FMODStudioJNI.FMOD_OUTPUT_OBJECT3DINFO_bufferlength_get(swigCPtr, this);
  }

  public void setPosition(FMOD_VECTOR value) {
    FMODStudioJNI.FMOD_OUTPUT_OBJECT3DINFO_position_set(swigCPtr, this, FMOD_VECTOR.getCPtr(value), value);
  }

  public FMOD_VECTOR getPosition() {
    long cPtr = FMODStudioJNI.FMOD_OUTPUT_OBJECT3DINFO_position_get(swigCPtr, this);
    return (cPtr == 0) ? null : new FMOD_VECTOR(cPtr, false);
  }

  public void setGain(float value) {
    FMODStudioJNI.FMOD_OUTPUT_OBJECT3DINFO_gain_set(swigCPtr, this, value);
  }

  public float getGain() {
    return FMODStudioJNI.FMOD_OUTPUT_OBJECT3DINFO_gain_get(swigCPtr, this);
  }

  public void setSpread(float value) {
    FMODStudioJNI.FMOD_OUTPUT_OBJECT3DINFO_spread_set(swigCPtr, this, value);
  }

  public float getSpread() {
    return FMODStudioJNI.FMOD_OUTPUT_OBJECT3DINFO_spread_get(swigCPtr, this);
  }

  public void setPriority(float value) {
    FMODStudioJNI.FMOD_OUTPUT_OBJECT3DINFO_priority_set(swigCPtr, this, value);
  }

  public float getPriority() {
    return FMODStudioJNI.FMOD_OUTPUT_OBJECT3DINFO_priority_get(swigCPtr, this);
  }

  public FMOD_OUTPUT_OBJECT3DINFO() {
    this(FMODStudioJNI.new_FMOD_OUTPUT_OBJECT3DINFO(), true);
  }

}
