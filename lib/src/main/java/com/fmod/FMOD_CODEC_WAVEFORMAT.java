package com.fmod;
/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.3.0
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


public class FMOD_CODEC_WAVEFORMAT {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected FMOD_CODEC_WAVEFORMAT(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(FMOD_CODEC_WAVEFORMAT obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected static long swigRelease(FMOD_CODEC_WAVEFORMAT obj) {
    long ptr = 0;
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new RuntimeException("Cannot release ownership as memory is not owned");
      ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.delete();
    }
    return ptr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        FMODStudioJNI.delete_FMOD_CODEC_WAVEFORMAT(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setName(String value) {
    FMODStudioJNI.FMOD_CODEC_WAVEFORMAT_name_set(swigCPtr, this, value);
  }

  public String getName() {
    return FMODStudioJNI.FMOD_CODEC_WAVEFORMAT_name_get(swigCPtr, this);
  }

  public void setFormat(FMOD_SOUND_FORMAT value) {
    FMODStudioJNI.FMOD_CODEC_WAVEFORMAT_format_set(swigCPtr, this, value.swigValue());
  }

  public FMOD_SOUND_FORMAT getFormat() {
    return FMOD_SOUND_FORMAT.swigToEnum(FMODStudioJNI.FMOD_CODEC_WAVEFORMAT_format_get(swigCPtr, this));
  }

  public void setChannels(int value) {
    FMODStudioJNI.FMOD_CODEC_WAVEFORMAT_channels_set(swigCPtr, this, value);
  }

  public int getChannels() {
    return FMODStudioJNI.FMOD_CODEC_WAVEFORMAT_channels_get(swigCPtr, this);
  }

  public void setFrequency(int value) {
    FMODStudioJNI.FMOD_CODEC_WAVEFORMAT_frequency_set(swigCPtr, this, value);
  }

  public int getFrequency() {
    return FMODStudioJNI.FMOD_CODEC_WAVEFORMAT_frequency_get(swigCPtr, this);
  }

  public void setLengthbytes(long value) {
    FMODStudioJNI.FMOD_CODEC_WAVEFORMAT_lengthbytes_set(swigCPtr, this, value);
  }

  public long getLengthbytes() {
    return FMODStudioJNI.FMOD_CODEC_WAVEFORMAT_lengthbytes_get(swigCPtr, this);
  }

  public void setLengthpcm(long value) {
    FMODStudioJNI.FMOD_CODEC_WAVEFORMAT_lengthpcm_set(swigCPtr, this, value);
  }

  public long getLengthpcm() {
    return FMODStudioJNI.FMOD_CODEC_WAVEFORMAT_lengthpcm_get(swigCPtr, this);
  }

  public void setPcmblocksize(long value) {
    FMODStudioJNI.FMOD_CODEC_WAVEFORMAT_pcmblocksize_set(swigCPtr, this, value);
  }

  public long getPcmblocksize() {
    return FMODStudioJNI.FMOD_CODEC_WAVEFORMAT_pcmblocksize_get(swigCPtr, this);
  }

  public void setLoopstart(int value) {
    FMODStudioJNI.FMOD_CODEC_WAVEFORMAT_loopstart_set(swigCPtr, this, value);
  }

  public int getLoopstart() {
    return FMODStudioJNI.FMOD_CODEC_WAVEFORMAT_loopstart_get(swigCPtr, this);
  }

  public void setLoopend(int value) {
    FMODStudioJNI.FMOD_CODEC_WAVEFORMAT_loopend_set(swigCPtr, this, value);
  }

  public int getLoopend() {
    return FMODStudioJNI.FMOD_CODEC_WAVEFORMAT_loopend_get(swigCPtr, this);
  }

  public void setMode(long value) {
    FMODStudioJNI.FMOD_CODEC_WAVEFORMAT_mode_set(swigCPtr, this, value);
  }

  public long getMode() {
    return FMODStudioJNI.FMOD_CODEC_WAVEFORMAT_mode_get(swigCPtr, this);
  }

  public void setChannelmask(long value) {
    FMODStudioJNI.FMOD_CODEC_WAVEFORMAT_channelmask_set(swigCPtr, this, value);
  }

  public long getChannelmask() {
    return FMODStudioJNI.FMOD_CODEC_WAVEFORMAT_channelmask_get(swigCPtr, this);
  }

  public void setChannelorder(FMOD_CHANNELORDER value) {
    FMODStudioJNI.FMOD_CODEC_WAVEFORMAT_channelorder_set(swigCPtr, this, value.swigValue());
  }

  public FMOD_CHANNELORDER getChannelorder() {
    return FMOD_CHANNELORDER.swigToEnum(FMODStudioJNI.FMOD_CODEC_WAVEFORMAT_channelorder_get(swigCPtr, this));
  }

  public void setPeakvolume(float value) {
    FMODStudioJNI.FMOD_CODEC_WAVEFORMAT_peakvolume_set(swigCPtr, this, value);
  }

  public float getPeakvolume() {
    return FMODStudioJNI.FMOD_CODEC_WAVEFORMAT_peakvolume_get(swigCPtr, this);
  }

  public FMOD_CODEC_WAVEFORMAT() {
    this(FMODStudioJNI.new_FMOD_CODEC_WAVEFORMAT(), true);
  }

}
