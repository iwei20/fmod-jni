package com.fmod;
/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.3.0
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


public final class FMOD_THREAD_TYPE {
  public final static FMOD_THREAD_TYPE FMOD_THREAD_TYPE_MIXER = new FMOD_THREAD_TYPE("FMOD_THREAD_TYPE_MIXER");
  public final static FMOD_THREAD_TYPE FMOD_THREAD_TYPE_FEEDER = new FMOD_THREAD_TYPE("FMOD_THREAD_TYPE_FEEDER");
  public final static FMOD_THREAD_TYPE FMOD_THREAD_TYPE_STREAM = new FMOD_THREAD_TYPE("FMOD_THREAD_TYPE_STREAM");
  public final static FMOD_THREAD_TYPE FMOD_THREAD_TYPE_FILE = new FMOD_THREAD_TYPE("FMOD_THREAD_TYPE_FILE");
  public final static FMOD_THREAD_TYPE FMOD_THREAD_TYPE_NONBLOCKING = new FMOD_THREAD_TYPE("FMOD_THREAD_TYPE_NONBLOCKING");
  public final static FMOD_THREAD_TYPE FMOD_THREAD_TYPE_RECORD = new FMOD_THREAD_TYPE("FMOD_THREAD_TYPE_RECORD");
  public final static FMOD_THREAD_TYPE FMOD_THREAD_TYPE_GEOMETRY = new FMOD_THREAD_TYPE("FMOD_THREAD_TYPE_GEOMETRY");
  public final static FMOD_THREAD_TYPE FMOD_THREAD_TYPE_PROFILER = new FMOD_THREAD_TYPE("FMOD_THREAD_TYPE_PROFILER");
  public final static FMOD_THREAD_TYPE FMOD_THREAD_TYPE_STUDIO_UPDATE = new FMOD_THREAD_TYPE("FMOD_THREAD_TYPE_STUDIO_UPDATE");
  public final static FMOD_THREAD_TYPE FMOD_THREAD_TYPE_STUDIO_LOAD_BANK = new FMOD_THREAD_TYPE("FMOD_THREAD_TYPE_STUDIO_LOAD_BANK");
  public final static FMOD_THREAD_TYPE FMOD_THREAD_TYPE_STUDIO_LOAD_SAMPLE = new FMOD_THREAD_TYPE("FMOD_THREAD_TYPE_STUDIO_LOAD_SAMPLE");
  public final static FMOD_THREAD_TYPE FMOD_THREAD_TYPE_CONVOLUTION1 = new FMOD_THREAD_TYPE("FMOD_THREAD_TYPE_CONVOLUTION1");
  public final static FMOD_THREAD_TYPE FMOD_THREAD_TYPE_CONVOLUTION2 = new FMOD_THREAD_TYPE("FMOD_THREAD_TYPE_CONVOLUTION2");
  public final static FMOD_THREAD_TYPE FMOD_THREAD_TYPE_MAX = new FMOD_THREAD_TYPE("FMOD_THREAD_TYPE_MAX");
  public final static FMOD_THREAD_TYPE FMOD_THREAD_TYPE_FORCEINT = new FMOD_THREAD_TYPE("FMOD_THREAD_TYPE_FORCEINT", FMODStudioJNI.FMOD_THREAD_TYPE_FORCEINT_get());

  public final int swigValue() {
    return swigValue;
  }

  public String toString() {
    return swigName;
  }

  public static FMOD_THREAD_TYPE swigToEnum(int swigValue) {
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (int i = 0; i < swigValues.length; i++)
      if (swigValues[i].swigValue == swigValue)
        return swigValues[i];
    throw new IllegalArgumentException("No enum " + FMOD_THREAD_TYPE.class + " with value " + swigValue);
  }

  private FMOD_THREAD_TYPE(String swigName) {
    this.swigName = swigName;
    this.swigValue = swigNext++;
  }

  private FMOD_THREAD_TYPE(String swigName, int swigValue) {
    this.swigName = swigName;
    this.swigValue = swigValue;
    swigNext = swigValue+1;
  }

  private FMOD_THREAD_TYPE(String swigName, FMOD_THREAD_TYPE swigEnum) {
    this.swigName = swigName;
    this.swigValue = swigEnum.swigValue;
    swigNext = this.swigValue+1;
  }

  private static FMOD_THREAD_TYPE[] swigValues = { FMOD_THREAD_TYPE_MIXER, FMOD_THREAD_TYPE_FEEDER, FMOD_THREAD_TYPE_STREAM, FMOD_THREAD_TYPE_FILE, FMOD_THREAD_TYPE_NONBLOCKING, FMOD_THREAD_TYPE_RECORD, FMOD_THREAD_TYPE_GEOMETRY, FMOD_THREAD_TYPE_PROFILER, FMOD_THREAD_TYPE_STUDIO_UPDATE, FMOD_THREAD_TYPE_STUDIO_LOAD_BANK, FMOD_THREAD_TYPE_STUDIO_LOAD_SAMPLE, FMOD_THREAD_TYPE_CONVOLUTION1, FMOD_THREAD_TYPE_CONVOLUTION2, FMOD_THREAD_TYPE_MAX, FMOD_THREAD_TYPE_FORCEINT };
  private static int swigNext = 0;
  private final int swigValue;
  private final String swigName;
}

