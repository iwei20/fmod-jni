package com.fmod;
/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.3.0
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


public class FMOD_DSP_METERING_INFO {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected FMOD_DSP_METERING_INFO(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(FMOD_DSP_METERING_INFO obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected static long swigRelease(FMOD_DSP_METERING_INFO obj) {
    long ptr = 0;
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new RuntimeException("Cannot release ownership as memory is not owned");
      ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.delete();
    }
    return ptr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        FMODStudioJNI.delete_FMOD_DSP_METERING_INFO(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setNumsamples(int value) {
    FMODStudioJNI.FMOD_DSP_METERING_INFO_numsamples_set(swigCPtr, this, value);
  }

  public int getNumsamples() {
    return FMODStudioJNI.FMOD_DSP_METERING_INFO_numsamples_get(swigCPtr, this);
  }

  public void setPeaklevel(SWIGTYPE_p_float value) {
    FMODStudioJNI.FMOD_DSP_METERING_INFO_peaklevel_set(swigCPtr, this, SWIGTYPE_p_float.getCPtr(value));
  }

  public SWIGTYPE_p_float getPeaklevel() {
    long cPtr = FMODStudioJNI.FMOD_DSP_METERING_INFO_peaklevel_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_float(cPtr, false);
  }

  public void setRmslevel(SWIGTYPE_p_float value) {
    FMODStudioJNI.FMOD_DSP_METERING_INFO_rmslevel_set(swigCPtr, this, SWIGTYPE_p_float.getCPtr(value));
  }

  public SWIGTYPE_p_float getRmslevel() {
    long cPtr = FMODStudioJNI.FMOD_DSP_METERING_INFO_rmslevel_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_float(cPtr, false);
  }

  public void setNumchannels(short value) {
    FMODStudioJNI.FMOD_DSP_METERING_INFO_numchannels_set(swigCPtr, this, value);
  }

  public short getNumchannels() {
    return FMODStudioJNI.FMOD_DSP_METERING_INFO_numchannels_get(swigCPtr, this);
  }

  public FMOD_DSP_METERING_INFO() {
    this(FMODStudioJNI.new_FMOD_DSP_METERING_INFO(), true);
  }

}
