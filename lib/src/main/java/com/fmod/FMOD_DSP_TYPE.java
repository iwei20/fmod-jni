package com.fmod;
/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.3.0
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


public final class FMOD_DSP_TYPE {
  public final static FMOD_DSP_TYPE FMOD_DSP_TYPE_UNKNOWN = new FMOD_DSP_TYPE("FMOD_DSP_TYPE_UNKNOWN");
  public final static FMOD_DSP_TYPE FMOD_DSP_TYPE_MIXER = new FMOD_DSP_TYPE("FMOD_DSP_TYPE_MIXER");
  public final static FMOD_DSP_TYPE FMOD_DSP_TYPE_OSCILLATOR = new FMOD_DSP_TYPE("FMOD_DSP_TYPE_OSCILLATOR");
  public final static FMOD_DSP_TYPE FMOD_DSP_TYPE_LOWPASS = new FMOD_DSP_TYPE("FMOD_DSP_TYPE_LOWPASS");
  public final static FMOD_DSP_TYPE FMOD_DSP_TYPE_ITLOWPASS = new FMOD_DSP_TYPE("FMOD_DSP_TYPE_ITLOWPASS");
  public final static FMOD_DSP_TYPE FMOD_DSP_TYPE_HIGHPASS = new FMOD_DSP_TYPE("FMOD_DSP_TYPE_HIGHPASS");
  public final static FMOD_DSP_TYPE FMOD_DSP_TYPE_ECHO = new FMOD_DSP_TYPE("FMOD_DSP_TYPE_ECHO");
  public final static FMOD_DSP_TYPE FMOD_DSP_TYPE_FADER = new FMOD_DSP_TYPE("FMOD_DSP_TYPE_FADER");
  public final static FMOD_DSP_TYPE FMOD_DSP_TYPE_FLANGE = new FMOD_DSP_TYPE("FMOD_DSP_TYPE_FLANGE");
  public final static FMOD_DSP_TYPE FMOD_DSP_TYPE_DISTORTION = new FMOD_DSP_TYPE("FMOD_DSP_TYPE_DISTORTION");
  public final static FMOD_DSP_TYPE FMOD_DSP_TYPE_NORMALIZE = new FMOD_DSP_TYPE("FMOD_DSP_TYPE_NORMALIZE");
  public final static FMOD_DSP_TYPE FMOD_DSP_TYPE_LIMITER = new FMOD_DSP_TYPE("FMOD_DSP_TYPE_LIMITER");
  public final static FMOD_DSP_TYPE FMOD_DSP_TYPE_PARAMEQ = new FMOD_DSP_TYPE("FMOD_DSP_TYPE_PARAMEQ");
  public final static FMOD_DSP_TYPE FMOD_DSP_TYPE_PITCHSHIFT = new FMOD_DSP_TYPE("FMOD_DSP_TYPE_PITCHSHIFT");
  public final static FMOD_DSP_TYPE FMOD_DSP_TYPE_CHORUS = new FMOD_DSP_TYPE("FMOD_DSP_TYPE_CHORUS");
  public final static FMOD_DSP_TYPE FMOD_DSP_TYPE_ITECHO = new FMOD_DSP_TYPE("FMOD_DSP_TYPE_ITECHO");
  public final static FMOD_DSP_TYPE FMOD_DSP_TYPE_COMPRESSOR = new FMOD_DSP_TYPE("FMOD_DSP_TYPE_COMPRESSOR");
  public final static FMOD_DSP_TYPE FMOD_DSP_TYPE_SFXREVERB = new FMOD_DSP_TYPE("FMOD_DSP_TYPE_SFXREVERB");
  public final static FMOD_DSP_TYPE FMOD_DSP_TYPE_LOWPASS_SIMPLE = new FMOD_DSP_TYPE("FMOD_DSP_TYPE_LOWPASS_SIMPLE");
  public final static FMOD_DSP_TYPE FMOD_DSP_TYPE_DELAY = new FMOD_DSP_TYPE("FMOD_DSP_TYPE_DELAY");
  public final static FMOD_DSP_TYPE FMOD_DSP_TYPE_TREMOLO = new FMOD_DSP_TYPE("FMOD_DSP_TYPE_TREMOLO");
  public final static FMOD_DSP_TYPE FMOD_DSP_TYPE_SEND = new FMOD_DSP_TYPE("FMOD_DSP_TYPE_SEND");
  public final static FMOD_DSP_TYPE FMOD_DSP_TYPE_RETURN = new FMOD_DSP_TYPE("FMOD_DSP_TYPE_RETURN");
  public final static FMOD_DSP_TYPE FMOD_DSP_TYPE_HIGHPASS_SIMPLE = new FMOD_DSP_TYPE("FMOD_DSP_TYPE_HIGHPASS_SIMPLE");
  public final static FMOD_DSP_TYPE FMOD_DSP_TYPE_PAN = new FMOD_DSP_TYPE("FMOD_DSP_TYPE_PAN");
  public final static FMOD_DSP_TYPE FMOD_DSP_TYPE_THREE_EQ = new FMOD_DSP_TYPE("FMOD_DSP_TYPE_THREE_EQ");
  public final static FMOD_DSP_TYPE FMOD_DSP_TYPE_FFT = new FMOD_DSP_TYPE("FMOD_DSP_TYPE_FFT");
  public final static FMOD_DSP_TYPE FMOD_DSP_TYPE_LOUDNESS_METER = new FMOD_DSP_TYPE("FMOD_DSP_TYPE_LOUDNESS_METER");
  public final static FMOD_DSP_TYPE FMOD_DSP_TYPE_CONVOLUTIONREVERB = new FMOD_DSP_TYPE("FMOD_DSP_TYPE_CONVOLUTIONREVERB");
  public final static FMOD_DSP_TYPE FMOD_DSP_TYPE_CHANNELMIX = new FMOD_DSP_TYPE("FMOD_DSP_TYPE_CHANNELMIX");
  public final static FMOD_DSP_TYPE FMOD_DSP_TYPE_TRANSCEIVER = new FMOD_DSP_TYPE("FMOD_DSP_TYPE_TRANSCEIVER");
  public final static FMOD_DSP_TYPE FMOD_DSP_TYPE_OBJECTPAN = new FMOD_DSP_TYPE("FMOD_DSP_TYPE_OBJECTPAN");
  public final static FMOD_DSP_TYPE FMOD_DSP_TYPE_MULTIBAND_EQ = new FMOD_DSP_TYPE("FMOD_DSP_TYPE_MULTIBAND_EQ");
  public final static FMOD_DSP_TYPE FMOD_DSP_TYPE_MULTIBAND_DYNAMICS = new FMOD_DSP_TYPE("FMOD_DSP_TYPE_MULTIBAND_DYNAMICS");
  public final static FMOD_DSP_TYPE FMOD_DSP_TYPE_MAX = new FMOD_DSP_TYPE("FMOD_DSP_TYPE_MAX");
  public final static FMOD_DSP_TYPE FMOD_DSP_TYPE_FORCEINT = new FMOD_DSP_TYPE("FMOD_DSP_TYPE_FORCEINT", FMODStudioJNI.FMOD_DSP_TYPE_FORCEINT_get());

  public final int swigValue() {
    return swigValue;
  }

  public String toString() {
    return swigName;
  }

  public static FMOD_DSP_TYPE swigToEnum(int swigValue) {
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (int i = 0; i < swigValues.length; i++)
      if (swigValues[i].swigValue == swigValue)
        return swigValues[i];
    throw new IllegalArgumentException("No enum " + FMOD_DSP_TYPE.class + " with value " + swigValue);
  }

  private FMOD_DSP_TYPE(String swigName) {
    this.swigName = swigName;
    this.swigValue = swigNext++;
  }

  private FMOD_DSP_TYPE(String swigName, int swigValue) {
    this.swigName = swigName;
    this.swigValue = swigValue;
    swigNext = swigValue+1;
  }

  private FMOD_DSP_TYPE(String swigName, FMOD_DSP_TYPE swigEnum) {
    this.swigName = swigName;
    this.swigValue = swigEnum.swigValue;
    swigNext = this.swigValue+1;
  }

  private static FMOD_DSP_TYPE[] swigValues = { FMOD_DSP_TYPE_UNKNOWN, FMOD_DSP_TYPE_MIXER, FMOD_DSP_TYPE_OSCILLATOR, FMOD_DSP_TYPE_LOWPASS, FMOD_DSP_TYPE_ITLOWPASS, FMOD_DSP_TYPE_HIGHPASS, FMOD_DSP_TYPE_ECHO, FMOD_DSP_TYPE_FADER, FMOD_DSP_TYPE_FLANGE, FMOD_DSP_TYPE_DISTORTION, FMOD_DSP_TYPE_NORMALIZE, FMOD_DSP_TYPE_LIMITER, FMOD_DSP_TYPE_PARAMEQ, FMOD_DSP_TYPE_PITCHSHIFT, FMOD_DSP_TYPE_CHORUS, FMOD_DSP_TYPE_ITECHO, FMOD_DSP_TYPE_COMPRESSOR, FMOD_DSP_TYPE_SFXREVERB, FMOD_DSP_TYPE_LOWPASS_SIMPLE, FMOD_DSP_TYPE_DELAY, FMOD_DSP_TYPE_TREMOLO, FMOD_DSP_TYPE_SEND, FMOD_DSP_TYPE_RETURN, FMOD_DSP_TYPE_HIGHPASS_SIMPLE, FMOD_DSP_TYPE_PAN, FMOD_DSP_TYPE_THREE_EQ, FMOD_DSP_TYPE_FFT, FMOD_DSP_TYPE_LOUDNESS_METER, FMOD_DSP_TYPE_CONVOLUTIONREVERB, FMOD_DSP_TYPE_CHANNELMIX, FMOD_DSP_TYPE_TRANSCEIVER, FMOD_DSP_TYPE_OBJECTPAN, FMOD_DSP_TYPE_MULTIBAND_EQ, FMOD_DSP_TYPE_MULTIBAND_DYNAMICS, FMOD_DSP_TYPE_MAX, FMOD_DSP_TYPE_FORCEINT };
  private static int swigNext = 0;
  private final int swigValue;
  private final String swigName;
}

