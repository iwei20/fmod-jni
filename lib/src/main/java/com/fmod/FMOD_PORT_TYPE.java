package com.fmod;
/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.3.0
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


public final class FMOD_PORT_TYPE {
  public final static FMOD_PORT_TYPE FMOD_PORT_TYPE_MUSIC = new FMOD_PORT_TYPE("FMOD_PORT_TYPE_MUSIC");
  public final static FMOD_PORT_TYPE FMOD_PORT_TYPE_COPYRIGHT_MUSIC = new FMOD_PORT_TYPE("FMOD_PORT_TYPE_COPYRIGHT_MUSIC");
  public final static FMOD_PORT_TYPE FMOD_PORT_TYPE_VOICE = new FMOD_PORT_TYPE("FMOD_PORT_TYPE_VOICE");
  public final static FMOD_PORT_TYPE FMOD_PORT_TYPE_CONTROLLER = new FMOD_PORT_TYPE("FMOD_PORT_TYPE_CONTROLLER");
  public final static FMOD_PORT_TYPE FMOD_PORT_TYPE_PERSONAL = new FMOD_PORT_TYPE("FMOD_PORT_TYPE_PERSONAL");
  public final static FMOD_PORT_TYPE FMOD_PORT_TYPE_VIBRATION = new FMOD_PORT_TYPE("FMOD_PORT_TYPE_VIBRATION");
  public final static FMOD_PORT_TYPE FMOD_PORT_TYPE_AUX = new FMOD_PORT_TYPE("FMOD_PORT_TYPE_AUX");
  public final static FMOD_PORT_TYPE FMOD_PORT_TYPE_PASSTHROUGH = new FMOD_PORT_TYPE("FMOD_PORT_TYPE_PASSTHROUGH");
  public final static FMOD_PORT_TYPE FMOD_PORT_TYPE_VR_VIBRATION = new FMOD_PORT_TYPE("FMOD_PORT_TYPE_VR_VIBRATION");
  public final static FMOD_PORT_TYPE FMOD_PORT_TYPE_MAX = new FMOD_PORT_TYPE("FMOD_PORT_TYPE_MAX");
  public final static FMOD_PORT_TYPE FMOD_PORT_TYPE_FORCEINT = new FMOD_PORT_TYPE("FMOD_PORT_TYPE_FORCEINT", FMODStudioJNI.FMOD_PORT_TYPE_FORCEINT_get());

  public final int swigValue() {
    return swigValue;
  }

  public String toString() {
    return swigName;
  }

  public static FMOD_PORT_TYPE swigToEnum(int swigValue) {
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (int i = 0; i < swigValues.length; i++)
      if (swigValues[i].swigValue == swigValue)
        return swigValues[i];
    throw new IllegalArgumentException("No enum " + FMOD_PORT_TYPE.class + " with value " + swigValue);
  }

  private FMOD_PORT_TYPE(String swigName) {
    this.swigName = swigName;
    this.swigValue = swigNext++;
  }

  private FMOD_PORT_TYPE(String swigName, int swigValue) {
    this.swigName = swigName;
    this.swigValue = swigValue;
    swigNext = swigValue+1;
  }

  private FMOD_PORT_TYPE(String swigName, FMOD_PORT_TYPE swigEnum) {
    this.swigName = swigName;
    this.swigValue = swigEnum.swigValue;
    swigNext = this.swigValue+1;
  }

  private static FMOD_PORT_TYPE[] swigValues = { FMOD_PORT_TYPE_MUSIC, FMOD_PORT_TYPE_COPYRIGHT_MUSIC, FMOD_PORT_TYPE_VOICE, FMOD_PORT_TYPE_CONTROLLER, FMOD_PORT_TYPE_PERSONAL, FMOD_PORT_TYPE_VIBRATION, FMOD_PORT_TYPE_AUX, FMOD_PORT_TYPE_PASSTHROUGH, FMOD_PORT_TYPE_VR_VIBRATION, FMOD_PORT_TYPE_MAX, FMOD_PORT_TYPE_FORCEINT };
  private static int swigNext = 0;
  private final int swigValue;
  private final String swigName;
}

