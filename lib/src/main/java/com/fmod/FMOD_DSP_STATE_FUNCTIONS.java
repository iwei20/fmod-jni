package com.fmod;
/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.3.0
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


public class FMOD_DSP_STATE_FUNCTIONS {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected FMOD_DSP_STATE_FUNCTIONS(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(FMOD_DSP_STATE_FUNCTIONS obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected static long swigRelease(FMOD_DSP_STATE_FUNCTIONS obj) {
    long ptr = 0;
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new RuntimeException("Cannot release ownership as memory is not owned");
      ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.delete();
    }
    return ptr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        FMODStudioJNI.delete_FMOD_DSP_STATE_FUNCTIONS(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setAlloc(SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__char__p_void value) {
    FMODStudioJNI.FMOD_DSP_STATE_FUNCTIONS_alloc_set(swigCPtr, this, SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__char__p_void.getCPtr(value));
  }

  public SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__char__p_void getAlloc() {
    long cPtr = FMODStudioJNI.FMOD_DSP_STATE_FUNCTIONS_alloc_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__char__p_void(cPtr, false);
  }

  public void setRealloc(SWIGTYPE_p_f_p_void_unsigned_int_unsigned_int_p_q_const__char__p_void value) {
    FMODStudioJNI.FMOD_DSP_STATE_FUNCTIONS_realloc_set(swigCPtr, this, SWIGTYPE_p_f_p_void_unsigned_int_unsigned_int_p_q_const__char__p_void.getCPtr(value));
  }

  public SWIGTYPE_p_f_p_void_unsigned_int_unsigned_int_p_q_const__char__p_void getRealloc() {
    long cPtr = FMODStudioJNI.FMOD_DSP_STATE_FUNCTIONS_realloc_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_f_p_void_unsigned_int_unsigned_int_p_q_const__char__p_void(cPtr, false);
  }

  public void setFree(SWIGTYPE_p_f_p_void_unsigned_int_p_q_const__char__void value) {
    FMODStudioJNI.FMOD_DSP_STATE_FUNCTIONS_free_set(swigCPtr, this, SWIGTYPE_p_f_p_void_unsigned_int_p_q_const__char__void.getCPtr(value));
  }

  public SWIGTYPE_p_f_p_void_unsigned_int_p_q_const__char__void getFree() {
    long cPtr = FMODStudioJNI.FMOD_DSP_STATE_FUNCTIONS_free_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_f_p_void_unsigned_int_p_q_const__char__void(cPtr, false);
  }

  public void setGetsamplerate(SWIGTYPE_p_f_p_struct_FMOD_DSP_STATE_p_int__FMOD_RESULT value) {
    FMODStudioJNI.FMOD_DSP_STATE_FUNCTIONS_getsamplerate_set(swigCPtr, this, SWIGTYPE_p_f_p_struct_FMOD_DSP_STATE_p_int__FMOD_RESULT.getCPtr(value));
  }

  public SWIGTYPE_p_f_p_struct_FMOD_DSP_STATE_p_int__FMOD_RESULT getGetsamplerate() {
    long cPtr = FMODStudioJNI.FMOD_DSP_STATE_FUNCTIONS_getsamplerate_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_f_p_struct_FMOD_DSP_STATE_p_int__FMOD_RESULT(cPtr, false);
  }

  public void setGetblocksize(SWIGTYPE_p_f_p_struct_FMOD_DSP_STATE_p_unsigned_int__FMOD_RESULT value) {
    FMODStudioJNI.FMOD_DSP_STATE_FUNCTIONS_getblocksize_set(swigCPtr, this, SWIGTYPE_p_f_p_struct_FMOD_DSP_STATE_p_unsigned_int__FMOD_RESULT.getCPtr(value));
  }

  public SWIGTYPE_p_f_p_struct_FMOD_DSP_STATE_p_unsigned_int__FMOD_RESULT getGetblocksize() {
    long cPtr = FMODStudioJNI.FMOD_DSP_STATE_FUNCTIONS_getblocksize_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_f_p_struct_FMOD_DSP_STATE_p_unsigned_int__FMOD_RESULT(cPtr, false);
  }

  public void setDft(FMOD_DSP_STATE_DFT_FUNCTIONS value) {
    FMODStudioJNI.FMOD_DSP_STATE_FUNCTIONS_dft_set(swigCPtr, this, FMOD_DSP_STATE_DFT_FUNCTIONS.getCPtr(value), value);
  }

  public FMOD_DSP_STATE_DFT_FUNCTIONS getDft() {
    long cPtr = FMODStudioJNI.FMOD_DSP_STATE_FUNCTIONS_dft_get(swigCPtr, this);
    return (cPtr == 0) ? null : new FMOD_DSP_STATE_DFT_FUNCTIONS(cPtr, false);
  }

  public void setPan(FMOD_DSP_STATE_PAN_FUNCTIONS value) {
    FMODStudioJNI.FMOD_DSP_STATE_FUNCTIONS_pan_set(swigCPtr, this, FMOD_DSP_STATE_PAN_FUNCTIONS.getCPtr(value), value);
  }

  public FMOD_DSP_STATE_PAN_FUNCTIONS getPan() {
    long cPtr = FMODStudioJNI.FMOD_DSP_STATE_FUNCTIONS_pan_get(swigCPtr, this);
    return (cPtr == 0) ? null : new FMOD_DSP_STATE_PAN_FUNCTIONS(cPtr, false);
  }

  public void setGetspeakermode(SWIGTYPE_p_f_p_struct_FMOD_DSP_STATE_p_enum_FMOD_SPEAKERMODE_p_enum_FMOD_SPEAKERMODE__FMOD_RESULT value) {
    FMODStudioJNI.FMOD_DSP_STATE_FUNCTIONS_getspeakermode_set(swigCPtr, this, SWIGTYPE_p_f_p_struct_FMOD_DSP_STATE_p_enum_FMOD_SPEAKERMODE_p_enum_FMOD_SPEAKERMODE__FMOD_RESULT.getCPtr(value));
  }

  public SWIGTYPE_p_f_p_struct_FMOD_DSP_STATE_p_enum_FMOD_SPEAKERMODE_p_enum_FMOD_SPEAKERMODE__FMOD_RESULT getGetspeakermode() {
    long cPtr = FMODStudioJNI.FMOD_DSP_STATE_FUNCTIONS_getspeakermode_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_f_p_struct_FMOD_DSP_STATE_p_enum_FMOD_SPEAKERMODE_p_enum_FMOD_SPEAKERMODE__FMOD_RESULT(cPtr, false);
  }

  public void setGetclock(SWIGTYPE_p_f_p_struct_FMOD_DSP_STATE_p_unsigned_long_long_p_unsigned_int_p_unsigned_int__FMOD_RESULT value) {
    FMODStudioJNI.FMOD_DSP_STATE_FUNCTIONS_getclock_set(swigCPtr, this, SWIGTYPE_p_f_p_struct_FMOD_DSP_STATE_p_unsigned_long_long_p_unsigned_int_p_unsigned_int__FMOD_RESULT.getCPtr(value));
  }

  public SWIGTYPE_p_f_p_struct_FMOD_DSP_STATE_p_unsigned_long_long_p_unsigned_int_p_unsigned_int__FMOD_RESULT getGetclock() {
    long cPtr = FMODStudioJNI.FMOD_DSP_STATE_FUNCTIONS_getclock_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_f_p_struct_FMOD_DSP_STATE_p_unsigned_long_long_p_unsigned_int_p_unsigned_int__FMOD_RESULT(cPtr, false);
  }

  public void setGetlistenerattributes(SWIGTYPE_p_f_p_struct_FMOD_DSP_STATE_p_int_p_struct_FMOD_3D_ATTRIBUTES__FMOD_RESULT value) {
    FMODStudioJNI.FMOD_DSP_STATE_FUNCTIONS_getlistenerattributes_set(swigCPtr, this, SWIGTYPE_p_f_p_struct_FMOD_DSP_STATE_p_int_p_struct_FMOD_3D_ATTRIBUTES__FMOD_RESULT.getCPtr(value));
  }

  public SWIGTYPE_p_f_p_struct_FMOD_DSP_STATE_p_int_p_struct_FMOD_3D_ATTRIBUTES__FMOD_RESULT getGetlistenerattributes() {
    long cPtr = FMODStudioJNI.FMOD_DSP_STATE_FUNCTIONS_getlistenerattributes_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_f_p_struct_FMOD_DSP_STATE_p_int_p_struct_FMOD_3D_ATTRIBUTES__FMOD_RESULT(cPtr, false);
  }

  public void setLog(SWIGTYPE_p_f_unsigned_int_p_q_const__char_int_p_q_const__char_p_q_const__char_v_______void value) {
    FMODStudioJNI.FMOD_DSP_STATE_FUNCTIONS_log_set(swigCPtr, this, SWIGTYPE_p_f_unsigned_int_p_q_const__char_int_p_q_const__char_p_q_const__char_v_______void.getCPtr(value));
  }

  public SWIGTYPE_p_f_unsigned_int_p_q_const__char_int_p_q_const__char_p_q_const__char_v_______void getLog() {
    long cPtr = FMODStudioJNI.FMOD_DSP_STATE_FUNCTIONS_log_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_f_unsigned_int_p_q_const__char_int_p_q_const__char_p_q_const__char_v_______void(cPtr, false);
  }

  public void setGetuserdata(SWIGTYPE_p_f_p_struct_FMOD_DSP_STATE_p_p_void__FMOD_RESULT value) {
    FMODStudioJNI.FMOD_DSP_STATE_FUNCTIONS_getuserdata_set(swigCPtr, this, SWIGTYPE_p_f_p_struct_FMOD_DSP_STATE_p_p_void__FMOD_RESULT.getCPtr(value));
  }

  public SWIGTYPE_p_f_p_struct_FMOD_DSP_STATE_p_p_void__FMOD_RESULT getGetuserdata() {
    long cPtr = FMODStudioJNI.FMOD_DSP_STATE_FUNCTIONS_getuserdata_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_f_p_struct_FMOD_DSP_STATE_p_p_void__FMOD_RESULT(cPtr, false);
  }

  public FMOD_DSP_STATE_FUNCTIONS() {
    this(FMODStudioJNI.new_FMOD_DSP_STATE_FUNCTIONS(), true);
  }

}
