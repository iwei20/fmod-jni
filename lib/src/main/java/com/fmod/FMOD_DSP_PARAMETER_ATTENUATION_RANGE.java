package com.fmod;
/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.3.0
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


public class FMOD_DSP_PARAMETER_ATTENUATION_RANGE {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected FMOD_DSP_PARAMETER_ATTENUATION_RANGE(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(FMOD_DSP_PARAMETER_ATTENUATION_RANGE obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected static long swigRelease(FMOD_DSP_PARAMETER_ATTENUATION_RANGE obj) {
    long ptr = 0;
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new RuntimeException("Cannot release ownership as memory is not owned");
      ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.delete();
    }
    return ptr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        FMODStudioJNI.delete_FMOD_DSP_PARAMETER_ATTENUATION_RANGE(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setMin(float value) {
    FMODStudioJNI.FMOD_DSP_PARAMETER_ATTENUATION_RANGE_min_set(swigCPtr, this, value);
  }

  public float getMin() {
    return FMODStudioJNI.FMOD_DSP_PARAMETER_ATTENUATION_RANGE_min_get(swigCPtr, this);
  }

  public void setMax(float value) {
    FMODStudioJNI.FMOD_DSP_PARAMETER_ATTENUATION_RANGE_max_set(swigCPtr, this, value);
  }

  public float getMax() {
    return FMODStudioJNI.FMOD_DSP_PARAMETER_ATTENUATION_RANGE_max_get(swigCPtr, this);
  }

  public FMOD_DSP_PARAMETER_ATTENUATION_RANGE() {
    this(FMODStudioJNI.new_FMOD_DSP_PARAMETER_ATTENUATION_RANGE(), true);
  }

}
